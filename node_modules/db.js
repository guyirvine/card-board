/*
 * GET home page.
 */
var pg = require('pg');

exports.insert = function(name, fields, values, cb){
	console.log( "db.insert" );

	var dbClient = new pg.Client(dbConnString);
	dbClient.connect();

	var idQuery = dbClient.query("SELECT NEXTVAL( '" + name + "_seq' ) AS id" );
	idQuery.on('row', function(row) {
		var id = row.id;
		values.unshift( id );

		var value_string = "";
		for (i=1;i<fields.length;i++) {
			value_string = value_string + "$" + i + ",";
		}
		value_string = value_string + "$" + fields.length;
		
		var sql = "INSERT INTO " + name + "_tbl( " + fields.join( "," ) + " ) VALUES ( " + value_string + " )";
		console.log( "db.insert. sql: " + sql );
		insertQuery = dbClient.query(sql, values );

		insertQuery.on('end', function(row) {
			cb( id );
			dbClient.end();
			console.log( "db.insert. id: " + id );
		});

	});

};

exports.execute = function(sql, values, cb){
	console.log( "db.execute. sql: " + sql );

	var dbClient = new pg.Client(dbConnString);
	dbClient.connect();
	dbClient.query(sql, values, function(err, result) {
		console.log( "db.execute. values: " + values.join( "," ) + ". err: " + err + ". sql: " + sql );
		dbClient.end();
		cb();
	});
};

exports.queryForValue = function(sql, values, cb){
	console.log( "db.queryForValue" );

	var dbClient = new pg.Client(dbConnString);
	dbClient.connect();
	dbClient.query(sql, values, function(err, result) {
		console.log( "db.queryForValue" );
		dbClient.end();
		cb( result.row );
	});
};

exports.queryForRow = function(sql, values, cb){
	console.log( "db.queryForValue" );

	var dbClient = new pg.Client(dbConnString);
	dbClient.connect();
	dbClient.query(sql, values, function(err, result) {
		console.log( "db.queryForValue" );
		dbClient.end();
		cb( result.row );
	});
};

exports.queryForResultSet = function(sql, values, cb){
	console.log( "db.queryForResultSet" );
	var list = [];

	var dbClient = new pg.Client(dbConnString);
	dbClient.connect();
	var query = dbClient.query(sql, values);

	query.on('row', function(row) {
		list.push( row );
	});

	query.on('end', function() { 
		dbClient.end();
		cb( list );
	});
};

